# BEGIN PROB

# BEGIN SUBPROB

Storm forecasters are very interested in the direction in which a tropical storm moves. This
direction of movement can be determined by looking at two consecutive rows in `storms` that
correspond to the same storm.

The function `direction` takes as input four values: the latitude and longitude of a data
entry for one storm, and the latitude and longitude of the next data entry for that same
storm. The function should return the direction in which the storm moved in the period of
time between the two data entries. The return value should be one of the following strings:

* "NE" for northeastern movement,
* "NW" for northwestern movement,
* "SW" for southwestern movement, or
* "SE" for southeastern movement

For example, `direction`(23.1, 75.1, 23.4, 75.7) should return "NW".
If the storm happened to move $directly$ north, south, east, or west, or if the storm did not
move at all, the function may return any one of "NE", "NW", "SW", or "SE".
Fill in the blanks in the function `direction` below. It may help to refer to the images on
Page 5.

```py
def direction(old_lat, old_long, new_lat, new_long):
    if old_lat > new_lat and old_long > new_long:
        return ____(a)____
    elif old_lat < new_lat and old_long < new_long:
        return ____(b)____
    elif old_lat > new_lat:
        return ____(c)____
    else:
        return ____(d)____
```

**a)** What goes in blank (a)? 
( ) `"NE"`
( ) `"NW"`
( ) `"SW"`
( ) `"SE"`

# BEGIN SOLUTION

**Answer:** "SE"

According to the given example that `direction(23.1, 75.1, 23.4, 75.7)` should return `"NW"`, the first data entry of latitude is 23.1, and the next data entry of latitude is 23.4. Since 23.1 < 23.4, the old  latitude < the new latitude returns to `N`. Similarly, since 75.1 < 75.7, meaning the old longtitude < the new longtitude returns to `W`. 

Since the code states an `if` statement that the old latitude >  new latitude, hence it should return the opposite of `N`, which is `S`. In addition, the codes states that old longtitude > new longtitude, hence it should return opposite direction, which is `E`.


# END SOLUTION

# END SUBPROB



# BEGIN SUBPROB

**b)** What goes in blank (b)? 
( ) `"NE"`
( ) `"NW"`
( ) `"SW"`
( ) `"SE"`

# BEGIN SOLUTION

**Answer:** "NW"

Similar to the previous question, we also follow the same logic to approach this question. Since the `elif` statement sets old latitude < new latitude, and old longtitude < new longtitude, it should still return `"NW"` as the given example. 


# END SOLUTION

# END SUBPROB



# BEGIN SUBPROB

**c)** What goes in blank (c)? 
( ) `"NE"`
( ) `"NW"`
( ) `"SW"`
( ) `"SE"`

# BEGIN SOLUTION

**Answer:** "SW"

Since we recognize that old latitude > new latitude, it returns `S`. Because it is given that "if the storm move directly south, it returns to any of "NE", "NW", "SW", "SE". The other possibility that starts with "S" is `"SW"`.


# END SOLUTION

# END SUBPROB



# BEGIN SUBPROB

**d)** What goes in blank (d)? 
( ) `"NE"`
( ) `"NW"`
( ) `"SW"`
( ) `"SE"`


# BEGIN SOLUTION

**Answer:** "NE"

After `else`, the only possibility left is `"NE"`. 


# END SOLUTION

# END SUBPROB



# END PROB


