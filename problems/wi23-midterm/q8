# BEGIN PROB

# BEGIN SUBPROB

Now we want to use `direction_array` to find the number of times that Katrina ’05 changed
directions, or moved in a different direction than it was moving immediately prior. For
example, if `direction_array` contained values
                        `"NW"`, `"NE"`, `"NE"`, `"NE"`, `"NW"`,
we would say that there were two direction changes (once from `"NW"` to `"NE"`, and another
from `"NE"` to `"NW"`).
Fill in the blanks so that `direction_changes` evaluates to the number of times that Katrina
’05 changed directions.

```py
    direction_changes = 0
    for j in ____(a)____:
        if ____(b)____:
            direction_changes = direction_changes + 1
```

**a)** What goes in blank (a)? 

# BEGIN SOLUTION

**Answer:** np.arange(1, len(direction_array))

We want to be able to execute a `for` loop in an array of numbers, which starts at 1 and ends depending on the length of the `direction_array`. 


# END SOLUTION

# END SUBPROB



# BEGIN SUBPROB

**b)** What goes in blank (b)?

# BEGIN SOLUTION

**Answer:** direction_array[j] != direction_array[j-1]

We need to ensure the current direction is different from the next direction, so that there exists a direction change. 


# END SOLUTION

# END SUBPROB



# BEGIN SUBPROB

**c)** There are 34 rows in `katrina_05`. Based on this information alone, what is the maxi-
mum possible value of `direction_changes`?

# BEGIN SOLUTION

**Answer:** 32

List the values in order, and we will get [1], [2], [3], ... [33], [34].

We need to find the max number of directions changes, so the consecutive pair of directions must be different. In addition, we didn't do any operation to get the initial value [1] and the ending value [34]. 

So 34-1-1=32


# END SOLUTION

# END SUBPROB



# END PROB